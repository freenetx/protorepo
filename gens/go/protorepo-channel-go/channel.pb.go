// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: channel/channel.proto

package channelpb

import (
	protorepo_share_go "github.com/freenetx/protorepo/gens/go/protorepo-share-go"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *SetKey) Reset() {
	*x = SetKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_channel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKey) ProtoMessage() {}

func (x *SetKey) ProtoReflect() protoreflect.Message {
	mi := &file_channel_channel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKey.ProtoReflect.Descriptor instead.
func (*SetKey) Descriptor() ([]byte, []int) {
	return file_channel_channel_proto_rawDescGZIP(), []int{0}
}

func (x *SetKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcKey string `protobuf:"bytes,1,opt,name=src_key,json=srcKey,proto3" json:"src_key,omitempty"`
	DstKey string `protobuf:"bytes,2,opt,name=dst_key,json=dstKey,proto3" json:"dst_key,omitempty"`
	Data   []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_channel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_channel_channel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_channel_channel_proto_rawDescGZIP(), []int{1}
}

func (x *Data) GetSrcKey() string {
	if x != nil {
		return x.SrcKey
	}
	return ""
}

func (x *Data) GetDstKey() string {
	if x != nil {
		return x.DstKey
	}
	return ""
}

func (x *Data) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//
	//	*ChannelRequest_SetKey
	//	*ChannelRequest_Data
	Req isChannelRequest_Req `protobuf_oneof:"Req"`
}

func (x *ChannelRequest) Reset() {
	*x = ChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_channel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelRequest) ProtoMessage() {}

func (x *ChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_channel_channel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelRequest.ProtoReflect.Descriptor instead.
func (*ChannelRequest) Descriptor() ([]byte, []int) {
	return file_channel_channel_proto_rawDescGZIP(), []int{2}
}

func (m *ChannelRequest) GetReq() isChannelRequest_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *ChannelRequest) GetSetKey() *SetKey {
	if x, ok := x.GetReq().(*ChannelRequest_SetKey); ok {
		return x.SetKey
	}
	return nil
}

func (x *ChannelRequest) GetData() *Data {
	if x, ok := x.GetReq().(*ChannelRequest_Data); ok {
		return x.Data
	}
	return nil
}

type isChannelRequest_Req interface {
	isChannelRequest_Req()
}

type ChannelRequest_SetKey struct {
	SetKey *SetKey `protobuf:"bytes,1,opt,name=set_key,json=setKey,proto3,oneof"`
}

type ChannelRequest_Data struct {
	Data *Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ChannelRequest_SetKey) isChannelRequest_Req() {}

func (*ChannelRequest_Data) isChannelRequest_Req() {}

type KeyAccepted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KeyAccepted) Reset() {
	*x = KeyAccepted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_channel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyAccepted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyAccepted) ProtoMessage() {}

func (x *KeyAccepted) ProtoReflect() protoreflect.Message {
	mi := &file_channel_channel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyAccepted.ProtoReflect.Descriptor instead.
func (*KeyAccepted) Descriptor() ([]byte, []int) {
	return file_channel_channel_proto_rawDescGZIP(), []int{3}
}

type ReceiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resp:
	//
	//	*ReceiveResponse_KeyAccepted
	//	*ReceiveResponse_Data
	Resp isReceiveResponse_Resp `protobuf_oneof:"Resp"`
}

func (x *ReceiveResponse) Reset() {
	*x = ReceiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_channel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveResponse) ProtoMessage() {}

func (x *ReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_channel_channel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveResponse.ProtoReflect.Descriptor instead.
func (*ReceiveResponse) Descriptor() ([]byte, []int) {
	return file_channel_channel_proto_rawDescGZIP(), []int{4}
}

func (m *ReceiveResponse) GetResp() isReceiveResponse_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (x *ReceiveResponse) GetKeyAccepted() *KeyAccepted {
	if x, ok := x.GetResp().(*ReceiveResponse_KeyAccepted); ok {
		return x.KeyAccepted
	}
	return nil
}

func (x *ReceiveResponse) GetData() *Data {
	if x, ok := x.GetResp().(*ReceiveResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isReceiveResponse_Resp interface {
	isReceiveResponse_Resp()
}

type ReceiveResponse_KeyAccepted struct {
	KeyAccepted *KeyAccepted `protobuf:"bytes,1,opt,name=key_accepted,json=keyAccepted,proto3,oneof"`
}

type ReceiveResponse_Data struct {
	Data *Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ReceiveResponse_KeyAccepted) isReceiveResponse_Resp() {}

func (*ReceiveResponse_Data) isReceiveResponse_Resp() {}

var File_channel_channel_proto protoreflect.FileDescriptor

var file_channel_channel_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x61, 0x70, 0x69, 0x1a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x4c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x72, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x72,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x70, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x05, 0x0a, 0x03,
	0x52, 0x65, 0x71, 0x22, 0x0d, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x65, 0x79, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06,
	0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x32, 0x8a, 0x01, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x54, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1b, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x66, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x74, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2d, 0x67,
	0x6f, 0x3b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_channel_channel_proto_rawDescOnce sync.Once
	file_channel_channel_proto_rawDescData = file_channel_channel_proto_rawDesc
)

func file_channel_channel_proto_rawDescGZIP() []byte {
	file_channel_channel_proto_rawDescOnce.Do(func() {
		file_channel_channel_proto_rawDescData = protoimpl.X.CompressGZIP(file_channel_channel_proto_rawDescData)
	})
	return file_channel_channel_proto_rawDescData
}

var file_channel_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_channel_channel_proto_goTypes = []interface{}{
	(*SetKey)(nil),                   // 0: channel.api.SetKey
	(*Data)(nil),                     // 1: channel.api.Data
	(*ChannelRequest)(nil),           // 2: channel.api.ChannelRequest
	(*KeyAccepted)(nil),              // 3: channel.api.KeyAccepted
	(*ReceiveResponse)(nil),          // 4: channel.api.ReceiveResponse
	(*protorepo_share_go.Empty)(nil), // 5: share.api.Empty
}
var file_channel_channel_proto_depIdxs = []int32{
	0, // 0: channel.api.ChannelRequest.set_key:type_name -> channel.api.SetKey
	1, // 1: channel.api.ChannelRequest.data:type_name -> channel.api.Data
	3, // 2: channel.api.ReceiveResponse.key_accepted:type_name -> channel.api.KeyAccepted
	1, // 3: channel.api.ReceiveResponse.data:type_name -> channel.api.Data
	5, // 4: channel.api.ChannelService.Test:input_type -> share.api.Empty
	2, // 5: channel.api.ChannelService.Channel:input_type -> channel.api.ChannelRequest
	5, // 6: channel.api.ChannelService.Test:output_type -> share.api.Empty
	4, // 7: channel.api.ChannelService.Channel:output_type -> channel.api.ReceiveResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_channel_channel_proto_init() }
func file_channel_channel_proto_init() {
	if File_channel_channel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_channel_channel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_channel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_channel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_channel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyAccepted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_channel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_channel_channel_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ChannelRequest_SetKey)(nil),
		(*ChannelRequest_Data)(nil),
	}
	file_channel_channel_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ReceiveResponse_KeyAccepted)(nil),
		(*ReceiveResponse_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_channel_channel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_channel_channel_proto_goTypes,
		DependencyIndexes: file_channel_channel_proto_depIdxs,
		MessageInfos:      file_channel_channel_proto_msgTypes,
	}.Build()
	File_channel_channel_proto = out.File
	file_channel_channel_proto_rawDesc = nil
	file_channel_channel_proto_goTypes = nil
	file_channel_channel_proto_depIdxs = nil
}
